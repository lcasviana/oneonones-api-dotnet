// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Oneonones.Repositories.Context;

#nullable disable

namespace Oneonones.Repositories.Migrations
{
    [DbContext(typeof(OneononeContext))]
    partial class OneononeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Oneonones.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Email" }, "IX_employee_email")
                        .IsUnique();

                    b.ToTable("employee");
                });

            modelBuilder.Entity("Oneonones.Domain.Entities.Meeting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Annotation")
                        .HasMaxLength(2047)
                        .HasColumnType("character varying(2047)")
                        .HasColumnName("annotation");

                    b.Property<Guid>("LeaderId")
                        .HasColumnType("uuid")
                        .HasColumnName("leader_id");

                    b.Property<Guid>("LedId")
                        .HasColumnType("uuid")
                        .HasColumnName("led_id");

                    b.Property<DateTime>("MeetingDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("meeting_date");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "LeaderId", "LedId", "MeetingDate" }, "IX_meeting_leader")
                        .IsUnique();

                    b.HasIndex(new[] { "LedId", "LeaderId", "MeetingDate" }, "IX_meeting_led")
                        .IsUnique();

                    b.ToTable("meeting");
                });

            modelBuilder.Entity("Oneonones.Domain.Entities.Oneonone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("Frequency")
                        .HasColumnType("integer")
                        .HasColumnName("frequency_type");

                    b.Property<Guid>("LeaderId")
                        .HasColumnType("uuid")
                        .HasColumnName("leader_id");

                    b.Property<Guid>("LedId")
                        .HasColumnType("uuid")
                        .HasColumnName("led_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "LeaderId", "LedId" }, "IX_oneonone_leader")
                        .IsUnique();

                    b.HasIndex(new[] { "LedId", "LeaderId" }, "IX_oneonone_led")
                        .IsUnique();

                    b.ToTable("oneonone");
                });

            modelBuilder.Entity("Oneonones.Domain.Entities.Meeting", b =>
                {
                    b.HasOne("Oneonones.Domain.Entities.Employee", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Oneonones.Domain.Entities.Employee", "Led")
                        .WithMany()
                        .HasForeignKey("LedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leader");

                    b.Navigation("Led");
                });

            modelBuilder.Entity("Oneonones.Domain.Entities.Oneonone", b =>
                {
                    b.HasOne("Oneonones.Domain.Entities.Employee", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Oneonones.Domain.Entities.Employee", "Led")
                        .WithMany()
                        .HasForeignKey("LedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leader");

                    b.Navigation("Led");
                });
#pragma warning restore 612, 618
        }
    }
}
